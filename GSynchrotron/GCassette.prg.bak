#include "GCassettedefs.inc"

Real m_AngleOfFirstColumn(NUM_CASSETTES)
Real m_UForNormalStandby(NUM_CASSETTES)
Real m_UForSecondaryStandby(NUM_CASSETTES)
Real m_UForPuckStandby(NUM_CASSETTES)

'' Tilt Information for Each Cassette
Real m_tiltDX(NUM_CASSETTES)
Real m_tiltDY(NUM_CASSETTES)

'' Actual Cassette Center's X,Y Coordinates obtained using tilt information
Real m_CenterX(NUM_CASSETTES)
Real m_CenterY(NUM_CASSETTES)


Function GCassetteName$(cassette_position As Integer) As String
	If cassette_position = LEFT_CASSETTE Then
		GCassetteName$ = "left_cassette"
	ElseIf cassette_position = MIDDLE_CASSETTE Then
		GCassetteName$ = "middle_cassette"
	ElseIf cassette_position = RIGHT_CASSETTE Then
		GCassetteName$ = "right_cassette"
	EndIf
Fend

Function SetUpDirection(cassette_position As Integer, column_A_Angle As Real, standbyU As Real, secondaryStandbyU As Real)
	m_AngleOfFirstColumn(cassette_position) = column_A_Angle
	m_UForNormalStandby(cassette_position) = standbyU
	m_UForSecondaryStandby(cassette_position) = secondaryStandbyU
	m_UForPuckStandby(cassette_position) = (standbyU + secondaryStandbyU) / 2.0
Fend

Function SetUpCoordinates(cassette_position As Integer, pointNum As Integer)
	PLabel pointNum, GCassetteName$(cassette_position)
Fend

Function SetupTilt(cassette_position As Integer, topPointNum As Integer, bottomPointNum As Integer, ByRef StatusStringToAppend$ As String) As Boolean
	Real deltaZ
	deltaZ = CZ(P(topPointNum)) - CZ(P(bottomPointNum))
	
	If (deltaZ < CASSETTE_HEIGHT / 2.0) Then
		StatusStringToAppend$ = StatusStringToAppend$ + " For " + GCassetteName$(cassette_position) + ", deltaZ is less than half of Normal Cassette Height!"
		SetupTilt = False
		Return
	EndIf

	Real deltaX, deltaY
	deltaX = CX(P(topPointNum)) - CX(P(bottomPointNum))
	deltaY = CY(P(topPointNum)) - CY(P(bottomPointNum))
	
	Real distance, tiltAngle
	distance = Sqr((deltaX * deltaX) + (deltaY * deltaY))
	tiltAngle = RadToDeg(Atan(distance / deltaZ))
	
	'' Check whether tiltAngle is less than 1 degree
	If (tiltAngle > 1) Then
		StatusStringToAppend$ = StatusStringToAppend$ + GCassetteName$(cassette_position) + " has a tiltAngle of " + Str$(Angle) + " degrees!"
		SetupTilt = False
		Return
	EndIf
	
	m_tiltDX(cassette_position) = deltaX / deltaZ
	m_tiltDY(cassette_position) = deltaY / deltaZ
	
	m_CenterX(cassette_position) = CX(P(bottomPointNum)) + m_tiltDX(cassette_position) * (CZ(P(PNumber(GCassetteName$(cassette_position)))) - CZ(P(bottomPointNum)))
	m_CenterY(cassette_position) = CY(P(bottomPointNum)) + m_tiltDY(cassette_position) * (CZ(P(PNumber(GCassetteName$(cassette_position)))) - CZ(P(bottomPointNum)))
	
	SetupTilt = True
Fend

Function SetupAllCassetteProperties(cassette_position As Integer, ByRef StatusStringToAppend$ As String) As Boolean
	
Fend

